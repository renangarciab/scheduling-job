{"version":3,"sources":["App.js","index.js"],"names":["App","jobsList","dateFormat","date","format","locale","pt","orderDateMatched","dateA","dateB","deadlineMatched","orderDate","deadline","list","compareList","exportList","dateMatched","groupArray","i","filter","item","duration","push","length","console","log","group","index","self","findIndex","found","sort","returnJobsList","id","description","Date","Container","fluid","map","jobGroup","ListGroup","className","ListGroupItemHeading","ListGroupItem","Table","job","ReactDOM","render","document","getElementById"],"mappings":"yNA8JeA,MAlJf,WACC,IAAIC,EAAW,GA8Cf,SAASC,EAAWC,GACnB,OAAOC,YAAOD,EAAM,kBAAmB,CACtCE,OAAQC,MAUV,SAASC,EAAiBC,EAAOC,GAChC,OAAOD,EAAME,gBAAkBD,EAAMC,gBAGtC,SAASC,EAAUH,EAAOC,GACzB,OAAOD,EAAMI,SAAWH,EAAMG,SA4C/B,OAFAX,EAvCA,SAAwBY,GAOvB,IANA,IAAMC,EAAcD,EAChBE,EAAa,GACbC,EAAc,KACZC,EAAa,GAJU,WAOpBC,GACRF,EAAcF,EAAYK,QACzB,SAACC,GAAD,OACClB,EAAWkB,EAAKR,YACfV,EAAWW,EAAKK,GAAGN,WAAaQ,EAAKC,SAAW,KAGnDJ,EAAWK,KAAK,CACfN,YAAad,EAAWW,EAAKK,GAAGN,UAChCF,gBAAiBG,EAAKK,GAAGN,SACzBC,KAAMG,KAVCE,EAAI,EAAGA,EAAIL,EAAKU,OAAQL,GAAK,EAAI,EAAjCA,GA6BT,OAfAM,QAAQC,IAAI,aAAcR,IAG1BF,EAAaE,EAAWE,QACvB,SAACO,EAAOC,EAAOC,GAAf,OACCD,IACAC,EAAKC,WACJ,SAACC,GAAD,OAAWA,EAAMd,cAAgBU,EAAMV,mBAI/Be,KAAKxB,GAEhBiB,QAAQC,IAAI,aAAcV,GAEnBA,EAGGiB,CAxGE,CACZ,CACCC,GAAI,EACJC,YAAa,yCACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,2CACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,gDACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,gDACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,gDACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,gDACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,GAEX,CACCY,GAAI,EACJC,YAAa,gDACbtB,SAAU,IAAIuB,KAAK,uBACnBd,SAAU,MAkEX,eAACe,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACEpC,EAASqC,KAAI,SAACC,GAAD,OACb,eAACC,EAAA,EAAD,CACCC,UAAU,OADX,UAGC,eAACC,EAAA,EAAD,+BACmBH,EAASvB,eAE5B,cAAC2B,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,kCACC,oBAAIH,UAAU,2BAAd,gBACA,oBAAIA,UAAU,eAAd,6BACA,oBAAIA,UAAU,eAAd,mBACA,oBAAIA,UAAU,2BAAd,sBAIAF,EAAS1B,KAAKkB,KAAKpB,GAAW2B,KAAI,SAACO,GAAD,OAClC,kCACC,oBAAIJ,UAAU,cAAd,SAA6BI,EAAIZ,KACjC,6BAAKY,EAAIX,cACT,8BA9EgB/B,EA8EI0C,EAAIjC,SA7ExBR,YAAOD,EAAM,yBAA0B,CAC7CE,OAAQC,SA6EF,oBAAImC,UAAU,cAAd,SACEI,EAAIxB,aALKwB,EAAIZ,IA3EvB,IAAwB9B,YA0DrB,UAESoC,EAAS7B,gBAFlB,YAEqC6B,EAASvB,iBA4B/C,4B,MCpJH8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3e7da406.chunk.js","sourcesContent":["import React from 'react';\n\nimport { format } from 'date-fns';\nimport {\n\tContainer,\n\tListGroup,\n\tListGroupItem,\n\tListGroupItemHeading,\n\tTable,\n} from 'reactstrap';\nimport pt from 'date-fns/locale/pt';\n\nfunction App() {\n\tlet jobsList = [];\n\tconst jobs = [\n\t\t{\n\t\t\tid: 1,\n\t\t\tdescription: 'Importação de arquivos de fundos',\n\t\t\tdeadline: new Date('2019-11-11 12:00:00'),\n\t\t\tduration: 2,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\tdescription: 'Importação de dados da Base Legada',\n\t\t\tdeadline: new Date('2019-11-13 12:00:00'),\n\t\t\tduration: 4,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tdescription: 'Importação de dados de integração',\n\t\t\tdeadline: new Date('2019-11-11 08:00:00'),\n\t\t\tduration: 6,\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tdescription: 'Importação de dados de integração',\n\t\t\tdeadline: new Date('2019-11-12 18:00:00'),\n\t\t\tduration: 6,\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tdescription: 'Importação de dados de integração',\n\t\t\tdeadline: new Date('2019-11-12 09:00:00'),\n\t\t\tduration: 8,\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tdescription: 'Importação de dados de integração',\n\t\t\tdeadline: new Date('2019-11-12 15:00:00'),\n\t\t\tduration: 1,\n\t\t},\n\t\t{\n\t\t\tid: 7,\n\t\t\tdescription: 'Importação de dados de integração',\n\t\t\tdeadline: new Date('2019-11-12 09:00:00'),\n\t\t\tduration: 10,\n\t\t},\n\t];\n\n\tfunction dateFormat(date) {\n\t\treturn format(date, \"dd'/'MM'/'yyyy'\", {\n\t\t\tlocale: pt,\n\t\t});\n\t}\n\n\tfunction fullDateFormat(date) {\n\t\treturn format(date, \"dd'/'MM'/'yyyy' 'HH:mm\", {\n\t\t\tlocale: pt,\n\t\t});\n\t}\n\n\tfunction orderDateMatched(dateA, dateB) {\n\t\treturn dateA.deadlineMatched - dateB.deadlineMatched;\n\t}\n\n\tfunction orderDate(dateA, dateB) {\n\t\treturn dateA.deadline - dateB.deadline;\n\t}\n\n\tfunction returnJobsList(list) {\n\t\tconst compareList = list;\n\t\tlet exportList = [];\n\t\tlet dateMatched = null;\n\t\tconst groupArray = [];\n\n\t\t// Função que agrupa os jobs por dia\n\t\tfor (let i = 0; i < list.length; i += 1) {\n\t\t\tdateMatched = compareList.filter(\n\t\t\t\t(item) =>\n\t\t\t\t\tdateFormat(item.deadline) ===\n\t\t\t\t\t\tdateFormat(list[i].deadline) && item.duration < 9\n\t\t\t);\n\n\t\t\tgroupArray.push({\n\t\t\t\tdateMatched: dateFormat(list[i].deadline),\n\t\t\t\tdeadlineMatched: list[i].deadline,\n\t\t\t\tlist: dateMatched,\n\t\t\t});\n\t\t}\n\n\t\tconsole.log('groupArray', groupArray);\n\n\t\t// Função que remove os agrupamentos repetidos\n\t\texportList = groupArray.filter(\n\t\t\t(group, index, self) =>\n\t\t\t\tindex ===\n\t\t\t\tself.findIndex(\n\t\t\t\t\t(found) => found.dateMatched === group.dateMatched\n\t\t\t\t)\n\t\t);\n\n\t\texportList.sort(orderDateMatched);\n\n\t\tconsole.log('exportList', exportList);\n\n\t\treturn exportList;\n\t}\n\n\tjobsList = returnJobsList(jobs);\n\n\treturn (\n\t\t<Container fluid=\"lg\">\n\t\t\t{jobsList.map((jobGroup) => (\n\t\t\t\t<ListGroup\n\t\t\t\t\tclassName=\"my-5\"\n\t\t\t\t\tkey={`${jobGroup.deadlineMatched}-${jobGroup.dateMatched}`}>\n\t\t\t\t\t<ListGroupItemHeading>\n\t\t\t\t\t\tTarefas do dia - {jobGroup.dateMatched}\n\t\t\t\t\t</ListGroupItemHeading>\n\t\t\t\t\t<ListGroupItem>\n\t\t\t\t\t\t<Table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<th className=\"border-top-0 text-center\">ID</th>\n\t\t\t\t\t\t\t\t<th className=\"border-top-0\">Descrição</th>\n\t\t\t\t\t\t\t\t<th className=\"border-top-0\">Prazo</th>\n\t\t\t\t\t\t\t\t<th className=\"border-top-0 text-center\">\n\t\t\t\t\t\t\t\t\tTempo\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t{jobGroup.list.sort(orderDate).map((job) => (\n\t\t\t\t\t\t\t\t<tbody key={job.id}>\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">{job.id}</td>\n\t\t\t\t\t\t\t\t\t<td>{job.description}</td>\n\t\t\t\t\t\t\t\t\t<td>{fullDateFormat(job.deadline)}</td>\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t{job.duration}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t</ListGroupItem>\n\t\t\t\t</ListGroup>\n\t\t\t))}\n\t\t\t<div />\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}